# Generated by Django 5.2.3 on 2025-07-02 20:04

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dispositivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('ultima_manutencao', models.DateField(default=django.utils.timezone.now)),
                ('ativo', models.BooleanField(default=True)),
                ('secret', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Equipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True)),
                ('ultima_manutencao', models.DateField()),
                ('secret', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Veiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('carro', 'Carro'), ('moto', 'Moto'), ('blindado', 'Blindado'), ('drone', 'Drone')], max_length=20)),
                ('descricao', models.TextField(blank=True)),
                ('modelo', models.CharField(max_length=100)),
                ('ultima_manutencao', models.DateField()),
                ('ativo', models.BooleanField(default=True)),
                ('secret', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('funcionario', 'Funcionário'), ('gerente', 'Gerente'), ('administrador', 'Administrador'), ('batman', 'Batman'), ('alfred', 'Alfred')], default='funcionario', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EstoqueDispositivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('localizacao', models.CharField(choices=[('CENTRO', 'Centro'), ('WEST_TOWN', 'West Town'), ('DOWN_TOWN', 'Down Town'), ('PORTO', 'Porto'), ('AEROPORTO', 'Aeroporto'), ('GALPAO_NORTE', 'Galpão Norte'), ('SEDE_DA_INDUSTRIA', 'Sede da Indústria'), ('BAT_CAVERNA', 'Bat Caverna'), ('POSTO_AVANCADO_CENTRO', 'Posto Avançado Centro'), ('POSTO_AVANCADO_NORTE', 'Posto Avançado Norte'), ('ESTACAO_SUBMERSA_PORTO', 'Estação Submersa Porto')], max_length=30)),
                ('quantidade', models.PositiveIntegerField(default=0)),
                ('dispositivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estoques', to='core.dispositivo')),
            ],
            options={
                'unique_together': {('dispositivo', 'localizacao')},
            },
        ),
        migrations.CreateModel(
            name='EstoqueEquipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('localizacao', models.CharField(choices=[('CENTRO', 'Centro'), ('WEST_TOWN', 'West Town'), ('DOWN_TOWN', 'Down Town'), ('PORTO', 'Porto'), ('AEROPORTO', 'Aeroporto'), ('GALPAO_NORTE', 'Galpão Norte'), ('SEDE_DA_INDUSTRIA', 'Sede da Indústria'), ('BAT_CAVERNA', 'Bat Caverna'), ('POSTO_AVANCADO_CENTRO', 'Posto Avançado Centro'), ('POSTO_AVANCADO_NORTE', 'Posto Avançado Norte'), ('ESTACAO_SUBMERSA_PORTO', 'Estação Submersa Porto')], max_length=30)),
                ('quantidade', models.PositiveIntegerField(default=0)),
                ('equipamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estoques', to='core.equipamento')),
            ],
            options={
                'unique_together': {('equipamento', 'localizacao')},
            },
        ),
        migrations.CreateModel(
            name='EstoqueVeiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('localizacao', models.CharField(choices=[('CENTRO', 'Centro'), ('WEST_TOWN', 'West Town'), ('DOWN_TOWN', 'Down Town'), ('PORTO', 'Porto'), ('AEROPORTO', 'Aeroporto'), ('GALPAO_NORTE', 'Galpão Norte'), ('SEDE_DA_INDUSTRIA', 'Sede da Indústria'), ('BAT_CAVERNA', 'Bat Caverna'), ('POSTO_AVANCADO_CENTRO', 'Posto Avançado Centro'), ('POSTO_AVANCADO_NORTE', 'Posto Avançado Norte'), ('ESTACAO_SUBMERSA_PORTO', 'Estação Submersa Porto')], max_length=30)),
                ('quantidade', models.PositiveIntegerField(default=0)),
                ('veiculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estoques', to='core.veiculo')),
            ],
            options={
                'unique_together': {('veiculo', 'localizacao')},
            },
        ),
    ]
